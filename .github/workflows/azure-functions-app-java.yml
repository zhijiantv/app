# 当提交被推送到默认分支时，此工作流将构建一个 Java 项目并将其部署到 Windows 或 Linux 上的 Azure Functions App。
#
# 此工作流程假定您已经创建了目标 Azure Functions 应用程序。
# 有关说明，请参阅 https://learn.microsoft.com/en-us/azure/azure-functions/create-first-function-vs-code-java
#
# 要配置此工作流程：
# 1. 在您的存储库中设置以下机密：
# - AZURE_FUNCTIONAPP_PUBLISH_PROFILE
# 2. 更改您的配置的环境变量。
#
# 更多信息：
# - Azure 的 GitHub Actions：https://github.com/Azure/Actions
# - Azure 函数操作：https://github.com/Azure/functions-action
# - 发布配置文件：https://github.com/Azure/functions-action#using-publish-profile-as-deployment-credential-recommended
# - 用于 RBAC 的 Azure 服务主体：https://github.com/Azure/functions-action#using-azure-service-principal-for-rbac-as-deployment-credential
#
# 有关开始使用 GitHub Action 工作流部署到 ​​Azure 的更多示例：https://github.com/Azure/actions-workflow-samples/tree/master/FunctionApp

姓名：名称：将 Java 项目部署到 Azure Function App

on:
  push:
    branches: ["release"]

env:
  AZURE_FUNCTIONAPP_NAME: 'your-app-name'  AZURE_FUNCTIONAPP_NAME: 'your-app-name' # 将其设置为 Azure 上的函数应用程序名称# set this to your function app name on Azure
  POM_XML_DIRECTORY: '.'  POM_XML_DIRECTORY: '.'  # 将其设置为包含 pom.xml 文件的目录
  DISTRIBUTION：'zulu'#将其设置为要使用的 Java 版本（例如'zulu'、'temurin'、'microsoft'）# set this to the java version to use (e.g. 'zulu', 'temurin', 'microsoft')
  JAVA_VERSION: '8'  JAVA_VERSION：'8'#将其设置为要使用的 Java 版本（例如'8'、'11'、'17'）# set this to the java version to use (e.g. '8', '11', '17')

jobs:
  build-and-deploy:
    runs-on:     运行于：windows-latest # 对于 Linux，请使用 ubuntu-latest# For Linux, use ubuntu-latest
    environment:     环境：开发
    步骤：
    -名称：'Checkout GitHub Action'
      用途：actions/checkout@v4

    # 如果您想使用 Azure RBAC 而不是发布配置文件，请取消注释下面的任务
    # - 名称：“通过 Azure CLI 登录”
    # 使用：azure/login@v1
    ＃ 和：
    #     creds: ${{ secrets.AZURE_RBAC_CREDENTIALS }} # set up AZURE_RBAC_CREDENTIALS secrets in your repository

    - name: Setup Java Sdk ${{ env.JAVA_VERSION }}
      uses: actions/setup-java@v4
      with:
        distribution: ${{ env.DISTRIBUTION }}
        java-version: ${{ env.JAVA_VERSION }}

    - name: 'Restore Project Dependencies Using Mvn'
      shell: pwsh # For Linux, use bash
      run: |
        pushd './${{ env.POM_XML_DIRECTORY }}'
        mvn clean package
        popd

    -名称：'运行 Azure Functions 操作'
      用途：Azure/functions-action@v1
      ID ：fa
      和：
        app-name: ${{ env.AZURE_FUNCTIONAPP_NAME }}
        package: '${{ env.POM_XML_DIRECTORY }}' # if there are multiple function apps in same project, then this path will be like './${{ env.POM_XML_DIRECTORY }}/target/azure-functions/${{ env.POM_FUNCTIONAPP_NAME }'
        publish-profile: ${{ secrets.AZURE_FUNCTIONAPP_PUBLISH_PROFILE }} # Remove publish-profile to use Azure RBAC
        respect-pom-xml: true
